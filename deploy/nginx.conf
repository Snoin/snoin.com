# vim: ft=nginx
# Reference: https://mozilla.github.io/server-side-tls/ssl-config-generator/
# Reference: https://wiki.mozilla.org/Security/Server_Side_TLS#DHE_and_ECDHE_support
# Reference: https://blogs.technet.microsoft.com/steriley/2007/11/07/changing-the-ssl-cipher-order-in-internet-explorer-7-on-windows-vista/
# Reference: https://en.wikipedia.org/wiki/Template:TLS/SSL_support_history_of_web_browsers
server {
    server_name snoin.com;
    listen 80;

    return 301 https://$server_name$request_uri;
}

server {
    server_name www.snoin.com;
    listen 80;

    return 301 https://snoin.com$request_uri;
}

server {
    server_name snoin.com;
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/snoin.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/snoin.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Support IE 8+
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # Support Android 3+, Java 7+, OpenSSL 1+, Windows Vista+
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/snoin.com/chain.pem;

    # Resolver
    resolver 8.8.8.8 8.8.4.4 valid=86400;
    resolver_timeout 10s;

    # Locations
    location / {
        include /etc/nginx/uwsgi_params;
        uwsgi_pass unix:///run/uwsgi/snoin.com.sock;
    }

    location /static/ {
        alias /home/snoinweb/snoin.com/snoin/web/static;
    }
}

server {
    server_name www.snoin.com;
    listen 443 ssl;
    listen [::]:443 ssl http2;

    # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
    ssl_certificate /etc/letsencrypt/live/snoin.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/snoin.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    # Support IE 8+
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # Support Android 3+, Java 7+, OpenSSL 1+, Windows Vista+
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
    ssl_prefer_server_ciphers on;

    # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
    add_header Strict-Transport-Security max-age=15768000;

    # OCSP Stapling ---
    # fetch OCSP records from URL in ssl_certificate and cache them
    ssl_stapling on;
    ssl_stapling_verify on;

    ## verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /etc/letsencrypt/live/snoin.com/chain.pem;

    # Resolver
    resolver 8.8.8.8 8.8.4.4 valid=86400;
    resolver_timeout 10s;

    # Redirect
    return 301 https://snoin.com$request_uri;
}
